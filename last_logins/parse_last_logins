#!/usr/bin/env ruby -w
require 'yaml'
require 'time'

data_dir = (ARGV[0] || 'data')
raise "couldn't find directory #{data_dir}" unless File.directory?(data_dir)
Dir.chdir(data_dir)

processed_dir = 'processed'
Dir.mkdir(processed_dir) unless File.directory?('processed')

DAY_INDEX = {}
NOW = Time.now

%w(Mon Tue Wed Thu Fri Sat Sun).each_with_index do |day, i|
  DAY_INDEX[day] = i + 1
end

def parse_event(login_fields, host)
  user, device, source, date_info = login_fields
  date_info =~ /^(...) (.{12})/

  if ($2 == nil)
    p login_fields
  end
  wday, date = DAY_INDEX[$1], Time.parse($2)
  times = 0
  while wday != date.wday || date > NOW
    date = Time.local(date.year - 1, date.month, date.day, date.hour, date.min)
    times += 1
    return nil if times == 5
  end
  duration = nil
  if date_info =~ /\((\d+\+)?(\d+):(\d+)\)$/
    days, hours, mins = $1.to_i, $2.to_i, $3.to_i
    duration = mins + hours * 60 + days * 24 * 60
  else
    duration = 0
  end

  { user: user, device: device, source: source, date: date, duration: duration, host: host }
end

def assign_event(event, bin_hash)
  date_key = event[:date].strftime('%Y%m%d')
  bin = (bin_hash[date_key] ||= {})
  event_key = event.values_at(:user, :device, :source, :date, :host).join(';')
  bin[event_key] = event
end

data_files, periods = Dir['*.yaml'], {}

data_files.each do |file|
  host = File.basename(file, '.yaml').gsub(/\.[^\.]*$/, '')
  logins = YAML.load_file(file)
  logins.each do |login|
    event = parse_event(login, host)
    assign_event(event, periods) unless event.nil?
  end
  # File.delete(file)
end

periods.each do |date_string, events|
  event_file = File.join(processed_dir, date_string + '.yaml')
  if File.exist?(event_file)
    old_events = YAML.load_file(event_file)
    events = old_events.merge(events)
  end
  File.open(event_file, 'w') { |f| f << YAML.dump(events) }
end
