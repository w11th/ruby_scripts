#!/usr/bin/env ruby -w

require 'active_record'
require 'optparse'
require 'fox16'

options = {}
opt = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options] hostname.com file1 file2 file3..."
  opts.on('-a', '--adapter ADAPTER', 'adapter') do |a|
    options[:adapter] = a
  end

  opts.on('-H', '--host HOST', 'host') do |h|
    options[:host] = h
  end

  opts.on('-u', '--username USERNAME', 'username') do |u|
    options[:username] = u
  end

  opts.on('-p', '--password PASSWORD', 'password') do |p|
    options[:password] = p
  end

  opts.on('-o', '--port PORT', 'port') do |o|
    options[:port] = o
  end

  opts.on('-d', '--database DATABASE', 'database') do |d|
    options[:database] = d
  end

  opts.on('-t', '--table TABLE', 'table') do |t|
    options[:table] = t
  end

  opts.on_tail('-h', '--help', 'Print this help') do
    puts opts
    exit
  end
end

opt.parse!

def make_sure(opt, options, option)
  unless options[option]
    puts "Please specify #{option}"
    puts opt
    exit
  end
end

make_sure(opt, options, :adapter)
make_sure(opt, options, :database)
make_sure(opt, options, :table)

connection_options = nil
if options[:adapter] == 'sqlite3'
  connection_options = {
    adapter: 'sqlite3',
    database: options[:database]
  }
end

if options[:adapter] == 'mysql'
  connection_options = {
    adapter: 'mysql',
    database: options[:database],
    host: options[:host] || 'localhost',
    username: options[:username] || 'root',
    password: options[:password] || ''
  }
end

if connection_options.nil?
  puts 'Unsupported adapter'
  exit
end

ActiveRecord::Base.establish_connection(
  connection_options
)

class OutputTable < ActiveRecord::Base
end

OutputTable.table_name = options[:table]

include Fox

fox_application = FXApp.new

main_window = FXMainWindow.new(fox_application, 'Insert record into ' \
                              "#{Inflector.humanize(options[:table])}", nil, nil, DECOR_ALL)

control_matrix = FXMatrix.new(main_window, 2, MATRIX_BY_COLUMNS)

field_controls = []

OutputTable.columns.each do |col|
  FXLabel.new(control_matrix, Inflector.humanize(col.name))
  field_controls << [col.name, FXTextField.new(control_matrix, 30)]
end

FXHorizontalFrame.new(control_matrix, LAYOUT_FILL_X)

FXButton.new(control_matrix, 'Insert').connect(SEL_COMMAND) do
  OutputTable.new do |rec|
    field_controls.each do |field_control|
      name, control = *field_control
      rec.send("#{name}=", control.text)
    end
    rec.save
  end

  FXMessageBox.new(main_window, 'Data Inserted', "Data Inserted into table '#{Inflector.humanize(options[:table])}'.\n\nThanks!", nil, MBOX_OK | DECOR_TITLE).execute
end

fox_application.create

main_window.show(PLACEMENT_SCREEN)

fox_application.run
